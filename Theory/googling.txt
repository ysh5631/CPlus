<서칭하며 알게된 것>
- unique_ptr은 객체를 단 하나의 포인터만 가리킬 수 있는것이고, shared_ptr은 여러 포인터가
  객체를 가리킬 수 있는 스마트 포인터이다.
: 자동으로 메모리를 할당하고 해제해준다.
: 참조 횟수를 알 수 있는 use_count라는 함수를 사용해서, 해당 객체를 가리키고 있는
  레퍼런스의 개수가 0일 때, 객체는 자동 소멸된다.

- 벡터의 push_back 함수와 emplace_back함수
: push_back과 같은 삽입 함수들은 삽입할 객체를 받지만 
  emplace_back과 같은 생성 삽입 함수는 삽입할 객체의 생성자를 위한 인자들을 받아 
  std::vector 내에서 직접 객체를 생성하여 삽입하므로 
  임시 객체의 생성과 파괴, 복사(혹은 move)를 하지 않아도 되어 성능상 더 유리하다는 것이다.

- class(int a) : age(a) {} 이런 방식을 "초기화 목록 문법"이라고 한다.
: 멤버가 객체일 경우 이 방법이 바람직하고, 이 방법을 꼭 써야 할 때가 있다.
-> 비정적 const 멤버를 초기화 할 경우.
-> 참조 멤버를 초기화 할 경우

- C++ 데코레이터(decorator) 패턴
: 기존 기능에 추가 기능을 덧 붙이는 기능
: Mixin 상속은 부모클래스를 템플릿 인자로 전달 받는 상속 방식을 말한다.

- 업캐스팅과 다운캐스팅
: 업캐스팅
-> 자식에서 부모로 가는 캐스팅(자식을 부모에게 할당하는 것)
: 다운캐스팅
-> 부모에서 자식으로 가는 캐스팅(부모를 자식에게 할당하는 것)

- 자식클래스에서 부모클래스의 private에는 접근할 수 없음.
: 직접 접근할수는 없지만, 멤버함수를 통해 접근할 수 있다.